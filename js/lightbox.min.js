console.clear();
// define images
let images = [
    { src: '053', thumb: '053', prj: 'buechehof', index: '0', mobileCol: '2 / 12', mobileRow: '1 / 15', desktopCol: '4 / 14', desktopRow: '1 / 15' },
    { src: '050', thumb: '050', prj: 'buechehof', index: '1', mobileCol: '2 / 16', mobileRow: '17 / 27', desktopCol: '16 / 30', desktopRow: '3 / 13' },
    { src: '065', thumb: '065', prj: 'buechehof', index: '2', mobileCol: '2 / 16', mobileRow: '41 / 51', desktopCol: '9 / 23', desktopRow: '27 / 37' },
    { src: '058', thumb: '058', prj: 'buechehof', index: '3', mobileCol: '2 / 9', mobileRow: '29 / 39', desktopCol: '16 / 23', desktopRow: '15 / 25' },
    { src: '046', thumb: '046', prj: 'buechehof', index: '4', mobileCol: '2 / 12', mobileRow: '53 / 60', desktopCol: '25 / 35', desktopRow: '22 / 29' },
    { src: '040', thumb: '040', prj: 'buechehof', index: '5', mobileCol: '2 / 9', mobileRow: '74 / 84', desktopCol: '2 / 9', desktopRow: '43 / 53' },
    { src: '034', thumb: '034', prj: 'buechehof', index: '6', mobileCol: '2 / 16', mobileRow: '62 / 72', desktopCol: '30 / 44', desktopRow: '31 / 41' },
    { src: '012', thumb: '012', prj: 'buechehof', index: '7', mobileCol: '2 / 12', mobileRow: '98 / 112', desktopCol: '30 / 40', desktopRow: '43 / 57' },
    { src: '011', thumb: '011', prj: 'buechehof', index: '8', mobileCol: '2 / 9', mobileRow: '86 / 96', desktopCol: '21 / 28', desktopRow: '49 / 59' },
    { src: '005', thumb: '005', prj: 'buechehof', index: '9', mobileCol: '2 / 9', mobileRow: '114 / 124', desktopCol: '16 / 23', desktopRow: '61 / 71' },
    { src: '000', thumb: '000', prj: 'buechehof', index: '10', mobileCol: '2 / 12', mobileRow: '126 / 140', desktopCol: '4 / 14', desktopRow: '59 / 73' },
    { src: '230', thumb: '230', prj: 'buechehof', index: '11', mobileCol: '2 / 12', mobileRow: '142 / 149', desktopCol: '32 / 42', desktopRow: '69 / 76' },
    { src: '133', thumb: '133', prj: 'buechehof', index: '12', mobileCol: '2 / 16', mobileRow: '151 / 161', desktopCol: '30 / 44', desktopRow: '78/ 88' },
    { src: '220', thumb: '220', prj: 'buechehof', index: '13', mobileCol: '2 / 12', mobileRow: '163 / 170', desktopCol: '30 / 40', desktopRow: '90 / 97' },
    { src: '138', thumb: '138', prj: 'buechehof', index: '14', mobileCol: '2 / 16', mobileRow: '172 / 182', desktopCol: '14 / 28', desktopRow: '92/ 102' },
    { src: '148', thumb: '148', prj: 'buechehof', index: '15', mobileCol: '2 / 12', mobileRow: '184 / 191', desktopCol: '2 / 12', desktopRow: '99 / 106' },
    { src: '198', thumb: '198', prj: 'buechehof', index: '16', mobileCol: '2 / 16', mobileRow: '193 / 203', desktopCol: '4 / 18', desktopRow: '108/ 118' },
    { src: '218', thumb: '218', prj: 'buechehof', index: '17', mobileCol: '2 / 12', mobileRow: '205 / 212', desktopCol: '34 / 44', desktopRow: '104 / 111' },
    { src: '068', thumb: '068', prj: 'wartenbergstrasse', index: '0', mobileCol: '2 / 12', mobileRow: '1 / 15', desktopCol: '32 / 42', desktopRow: '1 / 15' },
    { src: '052c', thumb: '052c', prj: 'wartenbergstrasse', index: '1', mobileCol: '2 / 16', mobileRow: '17 / 27', desktopCol: '16 / 30', desktopRow: '3 / 13' },
    { src: '061', thumb: '061', prj: 'wartenbergstrasse', index: '2', mobileCol: '2 / 9', mobileRow: '29 / 39', desktopCol: '23 / 30', desktopRow: '15 / 25' },
    { src: '051', thumb: '051', prj: 'wartenbergstrasse', index: '3', mobileCol: '2 / 12', mobileRow: '41 / 48', desktopCol: '11 / 21', desktopRow: '22 / 29' },
    { src: '048', thumb: '048', prj: 'wartenbergstrasse', index: '4', mobileCol: '2 / 16', mobileRow: '50 / 60', desktopCol: '3 / 17', desktopRow: '31 / 41' },
    { src: '040', thumb: '040', prj: 'wartenbergstrasse', index: '5', mobileCol: '2 / 12', mobileRow: '62 / 69', desktopCol: '23 / 37', desktopRow: '27 / 37' },
    { src: '016', thumb: '016', prj: 'wartenbergstrasse', index: '6', mobileCol: '2 / 12', mobileRow: '71 / 85', desktopCol: '7 / 17', desktopRow: '43 / 57' },
    { src: '021', thumb: '021', prj: 'wartenbergstrasse', index: '7', mobileCol: '2 / 9', mobileRow: '87 / 97', desktopCol: '19 / 26', desktopRow: '49 / 59' },
    { src: '008', thumb: '008', prj: 'wartenbergstrasse', index: '8', mobileCol: '2 / 9', mobileRow: '99 / 109', desktopCol: '36 / 43', desktopRow: '43 / 53' },
    { src: '003', prj: 'oubliettes', index: '0' },
    { src: '004', prj: 'oubliettes', index: '0' },
    { src: '005', prj: 'oubliettes', index: '0' },
    { src: '006', thumb: '006', prj: 'oubliettes', index: '0', mobileCol: '4 / 14', mobileRow: '1 / 8', desktopCol: '2 / 12', desktopRow: '1 / 8' }, // custom mobile thumbnails
    { src: '007', thumb: '007_thumb', prj: 'oubliettes', index: '0', mobileCol: '2 / 16', mobileRow: '10 / 20', desktopCol: '2 / 16', desktopRow: '10 / 20' },  // custom mobile thumbnails
    { src: '008', thumb: '008_thumb', prj: 'oubliettes', index: '0', mobileCol: '6 / 16', mobileRow: '22 / 29', desktopCol: '6 / 16', desktopRow: '22 / 29' },  // custom mobile thumbnails
    { src: '009', thumb: '009', prj: 'oubliettes', index: '0', mobileCol: '2 / 12', mobileRow: '31 / 38', desktopCol: '20 / 30', desktopRow: '15 / 22' },  // custom mobile thumbnails
    { src: '010', thumb: '010_thumb', prj: 'oubliettes', index: '0', mobileCol: '4 / 14', mobileRow: '40 / 47', desktopCol: '32 / 42', desktopRow: '15 / 22' },  // custom mobile thumbnails
    { src: '011', thumb: '011_thumb', prj: 'oubliettes', index: '0', mobileCol: '2 / 16', mobileRow: '49 / 59', desktopCol: '18 / 32', desktopRow: '24 / 34' },  // custom mobile thumbnails
    { src: '015', thumb: '015', prj: 'oubliettes', index: '0', mobileCol: '2 / 12', mobileRow: '61 / 68', desktopCol: '34 / 44', desktopRow: '29/ 36' },  // custom mobile thumbnails
    { src: '012', thumb: '012_thumb', prj: 'oubliettes', index: '0', mobileCol: '6 / 16', mobileRow: '70 / 77', desktopCol: '4 / 14', desktopRow: '36 / 43' },  // custom mobile thumbnails
    { src: '013', thumb: '013', prj: 'oubliettes', index: '0', mobileCol: '4 / 14', mobileRow: '79 / 86', desktopCol: '16 / 26', desktopRow: '36 / 43' },  // custom mobile thumbnails
    { src: '014', thumb: '014_thumb', prj: 'oubliettes', index: '0', mobileCol: '2 / 16', mobileRow: '88 / 98', desktopCol: '28 / 42', desktopRow: '38 / 48' },  // custom mobile thumbnails
    { src: '016', thumb: '016', prj: 'oubliettes', index: '0', mobileCol: '4 / 14', mobileRow: '100 / 107', desktopCol: '32 / 42', desktopRow: '50 / 57' },  // custom mobile thumbnails
    { src: '017', prj: 'oubliettes', index: '0' },
    { src: '018', prj: 'oubliettes', index: '0' },
    { src: '019', prj: 'oubliettes', index: '0' },
    { src: '025', thumb: '025', prj: 'gartenweg', index: '0', mobileCol: '2 / 12', mobileRow: '1 / 15', desktopCol: '34 / 44', desktopRow: '1 / 15' },
    { src: '040', thumb: '040', prj: 'gartenweg', index: '1', mobileCol: '2 / 16', mobileRow: '17 / 27', desktopCol: '18 / 32', desktopRow: '15 / 25' },
    { src: '030', thumb: '030', prj: 'gartenweg', index: '2', mobileCol: '2 / 9', mobileRow: '29 / 39', desktopCol: '25 / 32', desktopRow: '3 / 13' },
    { src: '017', thumb: '017', prj: 'gartenweg', index: '3', mobileCol: '2 / 9', mobileRow: '41 / 51', desktopCol: '9 / 16', desktopRow: '13 / 23' },
    { src: '007', thumb: '007', prj: 'gartenweg', index: '4', mobileCol: '2 / 12', mobileRow: '53 / 67', desktopCol: '2 / 12', desktopRow: '25 / 39' },
    { src: '070', thumb: '070', prj: 'gartenweg', index: '5', mobileCol: '2 / 16', mobileRow: '69 / 79', desktopCol: '4 / 18', desktopRow: '41 / 51' },
    { src: '075', thumb: '075', prj: 'gartenweg', index: '6', mobileCol: '2 / 12', mobileRow: '81 / 88', desktopCol: '20 / 30', desktopRow: '36 / 43' },
    { src: '057', thumb: '057', prj: 'gartenweg', index: '7', mobileCol: '2 / 12', mobileRow: '90 / 104', desktopCol: '20 / 30', desktopRow: '49 / 63' },
    { src: '043', thumb: '043', prj: 'gartenweg', index: '8', mobileCol: '2 / 9', mobileRow: '106 / 116', desktopCol: '11 / 18', desktopRow: '57 / 67' },
    { src: '102', thumb: '102', prj: 'gartenweg', index: '9', mobileCol: '2 / 12', mobileRow: '118 / 125', desktopCol: '28 / 38', desktopRow: '65 / 72' },
    { src: '023', thumb: '023', prj: 'gartenweg', index: '10', mobileCol: '2 / 12', mobileRow: '127 / 134', desktopCol: '34 / 44', desktopRow: '74 / 81' },
    { src: '061', thumb: '061', prj: 'gartenweg', index: '11', mobileCol: '2 / 16', mobileRow: '136 / 146', desktopCol: '18 / 32', desktopRow: '76/ 86' },
    { src: '052', thumb: '052', prj: 'gartenweg', index: '12', mobileCol: '2 / 12', mobileRow: '148 / 155', desktopCol: '22 / 32', desktopRow: '88 / 95' },
    { src: '004', thumb: '004', prj: 'gartenweg', index: '13', mobileCol: '2 / 12', mobileRow: '157 / 164', desktopCol: '2 / 12', desktopRow: '88 / 95' },
    { src: '018', thumb: '018', prj: 'gartenweg', index: '14', mobileCol: '2 / 12', mobileRow: '166 / 173', desktopCol: '18 / 28', desktopRow: '97 / 104' },
    { src: '055', thumb: '055', prj: 'gartenweg', index: '15', mobileCol: '2 / 16', mobileRow: '175 / 185', desktopCol: '30 / 44', desktopRow: '99/ 109' }
]
// append images on load
window.addEventListener('load', loadImages);
// append images on resize
let resizeTimeout;
const debounce = (func, delay) => {
    return (...args) => {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(() => {
            func.apply(this, args);
        }, delay);
    };
};
const handleResize = debounce(() => {
    const gridContainer = document.querySelectorAll('.gridContainer');
    gridContainer.forEach(gridContainer => gridContainer.textContent = '');
    loadImages();
}, 100);
window.addEventListener('resize', handleResize);
// append images
function loadImages() {
    images.forEach((img) => {
        const lb = document.querySelector('.lightbox');
        const lbSrc = document.querySelector('.lightboxSrc');
        const lbCount = document.querySelector('.lightboxCount');
        const lbClose = document.querySelector('.lightboxClose');
        const lbPrev = document.querySelector('.lightboxPrev');
        const lbNext = document.querySelector('.lightboxNext');
        const imgContainer = document.createElement('div');
        imgContainer.className = 'imgContainer';
        imgContainer.title = '\u00A9 tim ott';
        imgContainer.alt = '\u00A9 tim ott';
        imgContainer.style.backgroundImage = `url(assets/${img.prj}/${img.prj}_${img.thumb}.jpg)`;
        imgContainer.style.backgroundRepeat = 'round';
        imgContainer.style.backgroundSize = 'cover';
        imgContainer.style.cursor = 'pointer';
        // define device breakpoints in pixels
        const breakpoints = [0, 767.9];
        const isMobile = window.innerWidth < breakpoints[1];
        imgContainer.style.gridColumn = isMobile ? img.mobileCol : img.desktopCol;
        imgContainer.style.gridRow = isMobile ? img.mobileRow : img.desktopRow;
        document.querySelector(`.${img.prj}`).appendChild(imgContainer);
        // set currentIndex to index value from selected images
        // push images with same project value as selected image to new array

        // CONTINUE AI COMPARE HERE

        imgContainer.addEventListener('click', function () {
            let currentIndex = img.index;
            let imgSelection = images.filter((selected) => selected.prj === img.prj);
            let imgSelectionPath = [];
            imgSelection.forEach((selectedImage) => {
                imgSelectionPath.push(`assets/${selectedImage.prj}/${selectedImage.prj}_${selectedImage.src}.jpg`);
            });
            console.log(imgSelection);
            console.log(imgSelectionPath);
            console.log('current project: ' + img.prj);
            // open lightbox with selected image
            updateImage();
            lb.style.display = 'flex';
            lbSrc.style.objectFit = 'contain';
            document.body.style.overflow = 'hidden';
            // updates lightboxCount according to currentIndex
            function updateImage() {
                console.log('current image: ' + imgSelectionPath[currentIndex]);
                lbSrc.setAttribute('src', imgSelectionPath[currentIndex]);
                lbCount.textContent = `${parseFloat(currentIndex) + 1} / ${imgSelection.length}`;
            }
            // lightbox navigation
            function checkKey(pressed) {
                switch (pressed.key) {
                    case 'ArrowLeft':
                        pressed.preventDefault();
                        cyclePrev();
                        break;
                    case 'ArrowRight':
                        pressed.preventDefault();
                        cycleNext();
                        break;
                    case 'Escape':
                        pressed.preventDefault();
                        closeLightbox();
                        break;
                }
            }
            // addEventListener if none was added
            if (!document.hasEventListener) {
                document.addEventListener('keydown', checkKey);
                document.hasEventListener = true;
            }
            if (!lbClose.hasEventListener) {
                lbClose.addEventListener('click', closeLightbox);
                lbClose.hasEventListener = true;
            }
            if (!lbPrev.hasEventListener) {
                lbPrev.addEventListener('click', cyclePrev);
                lbPrev.hasEventListener = true;
            }
            if (!lbNext.hasEventListener) {
                lbNext.addEventListener('click', cycleNext);
                lbNext.hasEventListener = true;
            }
            if (!lb.hasEventListener) {
                lb.addEventListener('click', lightboxClick);
                lb.hasEventListener = true;
            }
            function cyclePrev() {
                currentIndex = (parseFloat(currentIndex) - 1 + imgSelectionPath.length) % imgSelectionPath.length;
                updateImage();
            }
            function cycleNext() {
                currentIndex = (parseFloat(currentIndex) + 1) % imgSelectionPath.length;
                updateImage();
            }
            function lightboxClick(click) {
                if (click.target === lb) {
                    closeLightbox();
                }
            }
            function closeLightbox() {
                document.removeEventListener('keydown', checkKey);
                document.hasEventListener = false;
                lbClose.removeEventListener('click', closeLightbox);
                lbClose.hasEventListener = false;
                lbPrev.removeEventListener('click', cyclePrev);
                lbPrev.hasEventListener = false;
                lbNext.removeEventListener('click', cycleNext);
                lbNext.hasEventListener = false;
                lb.removeEventListener('click', lightboxClick);
                lb.hasEventListener = false;
                lb.style.display = 'none';
                lbSrc.style.objectFit = 'cover';
                lbSrc.setAttribute('src', '');
            }
        });
    });
}

// AI WRITTEN FOLLOWS, to compare
/*

imgContainer.addEventListener('click', () => {
            openLightbox(img);
        });




function openLightbox(selectedImg) {
        const imgSelection = images.filter(img => img.project === selectedImg.project);
        const imgSelectionPath = imgSelection.map(img => `${img.url}${img.src}.jpg`);

        let currentIndex = selectedImg.index;

        function updateImage() {
            lightboxSrc.setAttribute('src', imgSelectionPath[currentIndex]);
            lightboxCount.textContent = `${currentIndex + 1} / ${imgSelection.length}`;
        }

        function cyclePrev() {
            currentIndex = (currentIndex - 1 + imgSelectionPath.length) % imgSelectionPath.length;
            updateImage();
        }

        function cycleNext() {
            currentIndex = (currentIndex + 1) % imgSelectionPath.length;
            updateImage();
        }

        function closeLightbox() {
            lightbox.style.display = 'none';
            lightboxSrc.setAttribute('src', '');
            document.body.style.overflow = 'auto';
            removeEventListeners();
        }

        function removeEventListeners() {
            document.removeEventListener('keydown', handleKeydown);
            lightboxClose.removeEventListener('click', closeLightbox);
            lightboxPrev.removeEventListener('click', cyclePrev);
            lightboxNext.removeEventListener('click', cycleNext);
        }

        function handleKeydown(event) {
            if (event.keyCode === LEFT_ARROW_KEY) {
                cyclePrev();
            } else if (event.keyCode === RIGHT_ARROW_KEY) {
                cycleNext();
            } else if (event.key === 'Escape') {
                closeLightbox();
            }
        }

        document.addEventListener('keydown', handleKeydown);
        lightboxClose.addEventListener('click', closeLightbox);
        lightboxPrev.addEventListener('click', cyclePrev);
        lightboxNext.addEventListener('click', cycleNext);
        lightbox.style.display = 'flex';
        document.body.style.overflow = 'hidden';
        updateImage();
    }

*/

// preventDefault, mainly disables scrolling on safari while lightbox is open
window.addEventListener('keydown', function (e) {
    if (['Space', 'ArrowUp', 'ArrowDown'].indexOf(e.code) > -1) {
        e.preventDefault();
    }
}, false);